{"pageProps":{"title":"react common components","description":"React 공통 컴포넌트 제작 (input, button)","category":"react","date":"2023-04-13","content":"\r\n## 공통 컴포넌트 제작의 필요성\r\n\r\n> 하나의 사이트를 제작할때 비슷한 input이나 button을 사용해야 하는 상황이 자주 있는데, 공통된 컴포넌트를 만들어 놓으면 코드 중복을 줄이면서 상황에 맞춰 적절하게 사용할 수 있게 된다.\r\n\r\n## 컴포넌트 제작\r\n\r\n### Input\r\n\r\n```typescript\r\nimport React from \"react\"; // element 속성을 가져오기 위해 import\r\nimport styled from \"styled-components\"; // CSS 적용\r\n\r\n// 컴포넌트의 props 타입을 InputElement의 속성과 내가 설정하고자 하는 타입을 포함한다.\r\ntype Props = React.HTMLAttributes<HTMLInputElement> & InputProps;\r\n\r\ninterface InputProps {\r\n  type?: string | undefined; // type?: 의 ?는 있어도 되고 없어도 된다는 의미\r\n  name?: string | undefined;\r\n  autoComplete?: string | undefined;\r\n  width: string;\r\n  height: string;\r\n  border?: string | undefined;\r\n}\r\n\r\n// width와 height는 number로 지정해도 무관하나,\r\n// 상황에 따라 뷰포트에 맞춰 쓸지, px에 맞춰 쓸지 달라질 수 있기 때문에 string으로 설정한 경우\r\n\r\nexport const MainInput = ({\r\n  type,\r\n  name,\r\n  autoComplete,\r\n  width,\r\n  height,\r\n  border,\r\n  ...props\r\n}: Props) => {\r\n  return (\r\n    <Main\r\n      // input이 갖고 있는 속성을 사용할 수 있도록 도와준다. (placeholder, onChange 등 속성과 이벤트들)\r\n      {...props}\r\n      name={name}\r\n      autoComplete={autoComplete || \"on\"}\r\n      type={type || \"text\"}\r\n      style={{\r\n        width: `${width}`,\r\n        height: `${height}`,\r\n        border: `${border && border !== \"\" ? `1px solid ${border}` : \"\"}`,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst Main = styled.input`\r\n  padding: 5px;\r\n  border: none;\r\n  border: 1px solid ${props => props.theme.inputBorderColor};\r\n  border-radius: 5px;\r\n  font-size: 1.2rem;\r\n  &:hover {\r\n    background: ${props => props.theme.inputBorderColor};\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${props => props.theme.hoverBorderColor};\r\n    box-shadow: 0 0 1px ${props => props.theme.hoverBorderColor};\r\n  }\r\n`;\r\n```\r\n\r\n### TextArea\r\n\r\n```typescript\r\ntype TaProps = React.HTMLAttributes<HTMLTextAreaElement> & TextAreaProps;\r\ninterface TextAreaProps {\r\n  name?: string | undefined;\r\n  width: string;\r\n  height: string;\r\n  border?: string | undefined;\r\n}\r\n\r\nexport const MainTextArea = ({\r\n  name,\r\n  width,\r\n  height,\r\n  border,\r\n  ...props\r\n}: TaProps) => {\r\n  return (\r\n    <TextArea\r\n      {...props}\r\n      name={name}\r\n      autoComplete=\"off\"\r\n      style={{\r\n        width: `${width}`,\r\n        height: `${height}`,\r\n        border: `${border && border !== \"\" ? `1px solid ${border}` : \"\"}`,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst TextArea = styled.textarea`\r\n  padding: 5px;\r\n  border: none;\r\n  border: 1px solid ${props => props.theme.inputBorderColor};\r\n  border-radius: 5px;\r\n  font-size: 1.2rem;\r\n  resize: none;\r\n  white-space: pre;\r\n  &:hover {\r\n    background: ${props => props.theme.inputBorderColor};\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border-color: ${props => props.theme.hoverBorderColor};\r\n    box-shadow: 0 0 1px ${props => props.theme.hoverBorderColor};\r\n  }\r\n`;\r\n```\r\n\r\n## Button\r\n\r\n```typescript\r\ntype Props = React.HTMLAttributes<HTMLButtonElement> & ButtonProps;\r\n\r\ninterface ButtonProps {\r\n  type?: \"button\" | \"submit\" | \"reset\" | undefined; // 버튼 타입은 이와 같이 설정해준다.\r\n  content: string;\r\n  width: string;\r\n  height: string;\r\n}\r\n\r\nexport const MainButton = ({\r\n  type,\r\n  content,\r\n  width,\r\n  height,\r\n  ...props\r\n}: Props) => {\r\n  return (\r\n    <Main\r\n      {...props}\r\n      type={type || \"button\"}\r\n      style={{ width: `${width}`, height: `${height}` }}\r\n    >\r\n      {content}\r\n    </Main>\r\n  );\r\n};\r\n\r\nconst Main = styled.button`\r\n  border: none;\r\n  border-radius: 5px;\r\n  background: none;\r\n  background-color: ${props => props.theme.mainButton};\r\n  color: ${props => props.theme.mainFontColor};\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${props => props.theme.mainButtonHover};\r\n  }\r\n`;\r\n```\r\n"},"__N_SSG":true}