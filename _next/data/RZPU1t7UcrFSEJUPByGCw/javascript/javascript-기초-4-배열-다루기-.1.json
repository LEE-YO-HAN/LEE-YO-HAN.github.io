{"pageProps":{"title":"javascript 기초 4 배열 다루기 .1","description":"javascript의 배열 메서드를 이용해 정렬, 데이터 처리 등 배열과 관련된 작업을 할 수 있다.","category":"javascript","date":"2023-03-06","content":"\r\n# JavaScript 배열 다뤄보기\r\n\r\n## 1. 배열 수정\r\n\r\n```javascript\r\nlet Arr = [1, 2, 3, 4, 5];\r\n\r\n// Arr배열의 0번째를 123으로 수정\r\nArr[0] = 123; // Arr = [123,2,3,4,5]\r\n```\r\n\r\n## 2. 배열 정렬 (Array.sort())\r\n\r\narray.sort()는 매개변수가 입력되지 않으면 유니코드 순서에 따라 정렬된다.\r\n\r\n또한 sort()는 원본 array를 참조하기 때문에 sort()를 통한 정렬은 원본 array도 동일하게 변경된다.\r\n\r\n### 숫자 배열 정렬\r\n\r\n```javascript\r\nlet arr = [1, 3, 2, 4];\r\n\r\narr.sort(); // [1,2,3,4]\r\narr.sort((a, b) => a - b); // [1,2,3,4]\r\narr.sort((a, b) => b - a); // [4,3,2,1]\r\n```\r\n\r\n### 문자 배열 정렬 (대소문자 구분x)\r\n\r\n```javascript\r\nlet arr3 = [\"jon\", \"awre\", \"gwgw\", \"zgfzg\"];\r\n\r\n// 오름차순\r\narr.sort(function (a, b) {\r\n  const upperCaseA = a.toUpperCase();\r\n  const upperCaseB = b.toUpperCase();\r\n\r\n  if (upperCaseA > upperCaseB) return 1;\r\n  if (upperCaseA < upperCaseB) return -1;\r\n  if (upperCaseA === upperCaseB) return 0;\r\n}); // ['awre', 'gwgw', 'jon', 'zgfzg']\r\n\r\n// 내림차순\r\narr.sort(function (a, b) {\r\n  const upperCaseA = a.toUpperCase();\r\n  const upperCaseB = b.toUpperCase();\r\n\r\n  if (upperCaseA < upperCaseB) return 1;\r\n  if (upperCaseA > upperCaseB) return -1;\r\n  if (upperCaseA === upperCaseB) return 0;\r\n}); // ['zgfzg', 'jon', 'gwgw', 'awre']\r\n```\r\n\r\n### 영어가 아닌 한글 등의 문자 정렬\r\n\r\n```javascript\r\nlet arr = [\"가\", \"나\", \"바\", \"다\"];\r\n\r\narr1.sort((a, b) => a.localeCompare(b)); // ['가', '나', '다', '바']\r\narr1.sort((a, b) => b.localeCompare(a)); // ['바', '다', '나', '가']\r\n```\r\n\r\n## 3. 배열 메서드\r\n\r\n```javascript\r\n\r\nlet Arr = [1,2,3,4,5]\r\n\r\n    // 배열의 마지막에 새로운 요소를 추가 / 변경된 배열의 길이를 반환\r\nArr.push(12) // Arr = [1,2,3,4,5,12] / 6\r\n\r\n\t// 배열의 마지막 요소를 제거 / 한 후, 제거한 요소를 반환\r\n   .pop() // Arr = [1,2,3,4] / 5\r\n\r\n   // 배열의 첫 번째 자리에 새로운 요소를 추가/ 변경된 배열의 길이를 반환\r\n   .unshift(12) // Arr = [12,1,2,3,4,5] / 6\r\n\r\n   // 배열의 첫 번째 요소를 제거 /  제거한 요소를 반환\r\n   .shift() // Arr = [2,3,4,5] / 1\r\n\r\n   // 배열의 1번째 index부터 2개 원소 제거\r\n   .splice(1, 2) // Arr = [1, 4, 5] / [2, 3] 제거됨\r\n\r\n   // 배열 반전\r\n   .reverse() 배열 반전 // [5,4,3,2,1]\r\n\r\n   // 배열 계산\r\n   //Arr.reduce((이전결과, 현재요소)=>이전결과+현재요소, 초기값)\r\n   // 초기값이 없는 경우 acc = Arr[0] , cur = Arr[1] 이 된다.\r\n   .reduce((acc,cur)=>acc+cur) 배열 계산 // 15\r\n\r\n    // 배열 추출\r\n    // .slice(x, y) x이상 y미만 index에 해당하는 배열 추출\r\n    // 매개변수가 x밖에 없다면 x 이상 index에 해당하는 배열 추출\r\n    // 매개변수가 음수인 경우 ex. (-2) 라면, 배열 끝에서 2번째 index 이상의 배열 추출\r\n    .slice(0, 2) // [1,2]\r\n\r\n```\r\n"},"__N_SSG":true}